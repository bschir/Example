<project name="MyProject" default="junit" basedir=".">
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  
  <path id="junit.class.path"> 
	<pathelement location="libs/junit-4.12.jar" /> 
	<pathelement location="libs/hamcrest-core-1.3.jar" /> 
	<pathelement location="${build}" />
  </path> 
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">	
	
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="junit.class.path"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
  <target name="junit" depends="dist">

    <junit printsummary="yes" fork="true" haltonfailure="no" failureProperty="test.failed">
	
		<classpath refid="junit.class.path"/>
		
		<formatter type="plain" usefile="false" />	
		<test name="FindLastTest" 
			haltonfailure="no" >
			<formatter type="plain" />
			<formatter type="xml" />
		</test>
		
	</junit>
  </target>
  
  <target name="otherStuff" if="test.failed">
    <echo message="A test has failed, so the build should fail"/>
    <fail message="JUnit test or tests failed."/>
  </target>
</project>